@use "./../header/header";
@use "./../buttons/buttons";
@use "./../../utils/colors/colors";
@use "./../../utils/grids/grid-variables" as g-v;
@use "./../../utils/mixins-other/display-flex";
@use "./../../utils/mixins-other/screen-widths" as s-w;
@use "./../../utils/mixins-other/show-hide-toggle" as s-h-t;
@use "./../../utils/size-spacing/nums-size-space" as n-s-s;
@use "./../../utils/size-spacing/row-column-gaps" as r-c-g;
@use "./../../utils/text-styling/link-styling";
@use "./../../utils/text-styling/text-styling" as t-s;
@use "./../../utils/variables/variables-global" as v-g;

footer {
    @extend %flex-row-wrap-default;
    background-color: colors.color('p', 90);
    & > nav.navigationBar {
        position: relative;
        @extend %flex-row-wrap-center;
        justify-content: space-between;
        order: 0;
        height: 100%;
        @include s-w.mediaQuery-maxOnly(250) {
            // padding: map-get(n-s-s.$size-space, "s") 0;
        }
        @include s-w.mediaQuery-minOnly(250) {
            width: 100%;
            // padding: 0;
        }
        @include s-w.mediaQuery-maxOnly(725) {
            justify-content: center;
        }
        @include s-w.mediaQuery-minMax(725, v-g.$bp-dt) {
            justify-content: space-between;
        }
        @include s-w.mediaQuery-maxOnly(v-g.$bp-dt) {
            order: 2;
        }

        & > a:first-of-type {
            @include s-w.mediaQuery-minOnly(v-g.$bp-dt) {
                padding-left: 0;
            }
        }

        & > nav {
            @extend %flex-row-wrap-center;
            @include s-w.mediaQuery-maxOnly(375) {
                width: 100%;
            }
            @include s-w.mediaQuery-minMax(375, 715) {
                justify-content: space-between;
                min-width: 350px;
                & > a:first-of-type {
                    padding-left: 0;
                }
                & > a:last-of-type {
                    padding-right: 0;
                }
            }
            @include s-w.mediaQuery-maxOnly(715) {
                // padding: map-get(n-s-s.$size-space-stack, "m");
                padding: map-get(n-s-s.$size-space-stack, "s");
            }
            @include s-w.mediaQuery-minMax(715, v-g.$bp-dt) {
                padding: map-get(n-s-s.$size-space-inline, "m");
            }
            @include s-w.mediaQuery-minOnly(v-g.$bp-dt) {
                padding: 0;
            }
        }

        & > .contactButtons {
            @extend %flex-row-wrap-center;
            justify-content: flex-start;
            @include r-c-g.rowColumnGaps("s", "m");
            @include s-h-t.sHT-mQ-dhds(350);
            @include s-w.mediaQuery-maxOnly(715) {
                justify-content: space-between;
                // width: 100%;
                & > button {
                    width: calc(50% - map-get(n-s-s.$size-space, "sm"));
                }
            }
            // & > button {
            //     &:not(.button-placeholder) {
            //         @extend %button-primary-loaded;
            //     }
            //     &.button-placeholder {
            //         @extend %button-primary-placeholder;
            //     }
            //     & > a {
            //         @extend %link;
            //     }
            // }
        }
    
    }

    & > .progressContainer {
        left: 0;
        max-width: 100%;
        width: 100%;
        height: map-get(n-s-s.$size-space, "xs");
        scroll-padding: 0;

        & > .progressBar {
            width: 0%;
            height: map-get(n-s-s.$size-space, "xs");
            // background-color: colors.color('p', 30);
            background-image: linear-gradient(to right, colors.color('n', 90, 90), colors.color('p', 30, 65));
            color: colors.color('n', 30);
            border-radius: map-get(n-s-s.$size-space, "2xs");
            scroll-padding: 0;
            transition: 0s ease-in-out;
        }
    }
    article {
        &#endMessage {
            max-width: 750px;
            width: 100%;
            & > p {
                &.subtitle {
                    padding-bottom: map-get(n-s-s.$size-space, "m");
                    @include s-w.mediaQuery-maxOnly(v-g.$bp-dt) {
                        max-width: 500px;
                    }
                }
                &#conversation {
                    padding-bottom: map-get(n-s-s.$size-space, "s");
                }
                & > span.noWidow {
                    @include t-s.noWidow(375, 600);
                }
            }
            & > .contactButtons {
                @extend %flex-row-wrap-center;
                justify-content: flex-start;
                @include r-c-g.rowColumnGaps("s", "m");
                & > button {
                    // For some unknown reason, this @extend below forces a compilation error even though the file imports are defined...
                    // @extend %button-primary-loaded;
                    & > a {
                        @extend %link;
                    }
                }
            }
        }
        &#endNavLinks > nav {
            @include g-v.gridClass(320, '', 2, 1fr);
            @include r-c-g.rowColumnGaps("s", "l");
        }
    }
}